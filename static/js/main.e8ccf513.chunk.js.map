{"version":3,"sources":["context/transaction/transactionContext.js","components/transaction/TransactionForm.js","components/transaction/TransactionRow.js","components/transaction/TransactionTable.js","context/transaction/transactionReducer.js","context/types.js","context/transaction/TransactionState.js","App.js","index.js"],"names":["transactionContext","createContext","TransactionForm","addTransaction","useContext","TransactionContext","useEffect","select","document","querySelector","M","FormSelect","init","useState","service","type","asset","displayDate","transDate","qty","amount","fee","transaction","setTransaction","onChange","e","target","name","value","className","onSubmit","preventDefault","id","placeholder","htmlFor","TransactionRow","console","log","TransactionTable","transactions","length","map","key","state","action","payload","TransactionState","props","useReducer","transactionReducer","sorted","current","dispatch","Provider","uuid","v4","children","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e8ccf513.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst transactionContext = createContext();\n\nexport default transactionContext;\n","import React, { useEffect, useState, useContext } from 'react';\nimport TransactionContext from '../../context/transaction/transactionContext';\n\nconst TransactionForm = () => {\n  const transactionContext = useContext(TransactionContext);\n\n  const { addTransaction } = transactionContext;\n\n  useEffect(() => {\n    // // Initializing datePicker and select elements with Materialize-css\n    // const datePicker = document.querySelector('.datepicker');\n    // // eslint-disable-next-line no-undef\n    // M.Datepicker.init(datePicker, {\n    //   autoClose: true,\n    //   onSelect: date => {\n    //     let dispDate = `${date.getDate()}, ${date.getFullYear()}`;\n    //     switch (date.getMonth()) {\n    //       case 0:\n    //         dispDate = `Jan ${dispDate} `;\n    //         break;\n\n    //       case 1:\n    //         dispDate = `Feb ${dispDate}`;\n    //         break;\n\n    //       case 2:\n    //         dispDate = `Mar ${dispDate}`;\n    //         break;\n\n    //       case 3:\n    //         dispDate = `Apr ${dispDate}`;\n    //         break;\n\n    //       case 4:\n    //         dispDate = `May ${dispDate}`;\n    //         break;\n\n    //       case 5:\n    //         dispDate = `Jun ${dispDate}`;\n    //         break;\n\n    //       case 6:\n    //         dispDate = `Jul ${dispDate}`;\n    //         break;\n\n    //       case 7:\n    //         dispDate = `Aug ${dispDate}`;\n    //         break;\n\n    //       case 8:\n    //         dispDate = `Sep ${dispDate}`;\n    //         break;\n\n    //       case 9:\n    //         dispDate = `Oct ${dispDate}`;\n    //         break;\n\n    //       case 10:\n    //         dispDate = `Nov ${dispDate}`;\n    //         break;\n\n    //       case 11:\n    //         dispDate = `Dec ${dispDate}`;\n    //         break;\n\n    //       default:\n    //         dispDate = '';\n    //         break;\n    //     }\n    //     setTransaction({\n    //       ...transaction,\n    //       transDate: date,\n    //       displayDate: dispDate\n    //     });\n    //   }\n    // });\n\n    const select = document.querySelector('#type');\n    // eslint-disable-next-line no-undef\n    M.FormSelect.init(select);\n  });\n\n  // set up component level state\n  const [transaction, setTransaction] = useState({\n    service: '',\n    type: 'sale',\n    asset: '',\n    displayDate: '',\n    transDate: '',\n    qty: '',\n    amount: '',\n    fee: ''\n  });\n\n  // destructure state for easier use\n  const { service, type, asset, displayDate, qty, amount, fee } = transaction;\n\n  // update component state when form inputs change\n  const onChange = e => {\n    setTransaction({ ...transaction, [e.target.name]: e.target.value });\n  };\n\n  // actions for form submission\n  const onSubmit = e => {\n    e.preventDefault();\n    addTransaction(transaction);\n    setTransaction({\n      service: '',\n      type: 'sale',\n      asset: '',\n      displayDate: '',\n      transDate: '',\n      qty: '',\n      amount: '',\n      fee: ''\n    });\n  };\n\n  return (\n    <div className='row section'>\n      <form className='col s12' onSubmit={onSubmit}>\n        <div className='row'>\n          <div className='input-field col s2'>\n            <input\n              type='text'\n              name='service'\n              id='service'\n              value={service}\n              placeholder='e.g. Coinbase'\n              className='validate'\n              onChange={onChange}\n            />\n            <label htmlFor='service'>Trading Service</label>\n          </div>\n          <div className='input-field col s2'>\n            <select name='type' id='type' value={type} onChange={onChange}>\n              <option value='purchase'>Purchase</option>\n              <option value='sale'>Sale</option>\n            </select>\n            <label htmlFor='type'>Transaction Type</label>\n          </div>\n          <div className='input-field col s1'>\n            <input\n              type='text'\n              name='asset'\n              id='asset'\n              placeholder='e.g. BTC, ETH, LTC'\n              className='validate'\n              value={asset}\n              onChange={onChange}\n            />\n            <label htmlFor='asset'>Asset</label>\n          </div>\n          <div className='input-field col s2'>\n            <input\n              type='text'\n              name='displayDate'\n              id='displayDate'\n              placeholder='ISO 8601 Format'\n              className='datepicker'\n              value={displayDate}\n              onChange={onChange}\n            />\n            <label htmlFor='transdate'>Transaction Date</label>\n          </div>\n          <div className='input-field col s1'>\n            <input\n              type='text'\n              name='qty'\n              id='qty'\n              placeholder='Quantity'\n              value={qty}\n              onChange={onChange}\n            />\n            <label htmlFor='qty'>Quantity</label>\n          </div>\n          <div className='input-field col s2'>\n            <input\n              type='text'\n              name='amount'\n              id='amount'\n              placeholder='Dollar Amount'\n              value={amount}\n              onChange={onChange}\n            />\n            <label htmlFor='amount'>Transaction Amount</label>\n          </div>\n          <div className='input-field col s2'>\n            <input\n              type='text'\n              name='fee'\n              id='fee'\n              placeholder='Fees'\n              value={fee}\n              onChange={onChange}\n            />\n            <label htmlFor='fee'>Transaction Fee</label>\n          </div>\n        </div>\n        <div className='row center-align'>\n          <button\n            className='btn waves-effect waves-light'\n            type='submit'\n            name='submit'\n          >\n            Add Transaction\n            <i className='material-icons right'>send</i>\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default TransactionForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TransactionRow = ({ transaction }) => {\n  console.log(transaction);\n\n  const {\n    // id,\n    service,\n    type,\n    asset,\n    displayDate,\n    qty,\n    amount,\n    fee\n  } = transaction;\n\n  return (\n    <tr>\n      <td>{service}</td>\n      <td>{type}</td>\n      <td>{asset}</td>\n      <td>{displayDate}</td>\n      <td>{qty}</td>\n      <td>${amount}</td>\n      <td>${fee}</td>\n    </tr>\n  );\n};\n\nTransactionRow.propTypes = {\n  transaction: PropTypes.object.isRequired\n};\n\nexport default TransactionRow;\n","import React, { useContext } from 'react';\nimport TransactionContext from '../../context/transaction/transactionContext';\nimport TransactionRow from './TransactionRow';\n\nconst TransactionTable = () => {\n  const transactionContext = useContext(TransactionContext);\n\n  const { transactions /*, current */ } = transactionContext;\n\n  if (transactions.length === 0) {\n    return (\n      <div className='container center-align'>\n        <h4>Enter a transaction!</h4>\n      </div>\n    );\n  }\n\n  console.log(transactions);\n\n  return (\n    <div className='container'>\n      <table className='striped centered'>\n        <thead>\n          <tr>\n            <th>Service</th>\n            <th>Type</th>\n            <th>Asset</th>\n            <th>Date</th>\n            <th>Quantity</th>\n            <th>Amount</th>\n            <th>Fee</th>\n          </tr>\n        </thead>\n        <tbody>\n          {transactions.map(transaction => (\n            <TransactionRow transaction={transaction} key={transaction.id} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default TransactionTable;\n","import {\n  ADD_TRANSACTION,\n  DELETE_TRANSACTION,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_TRANSACTION\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case ADD_TRANSACTION:\n      return {\n        ...state,\n        transactions: [...state.transactions, action.payload]\n      };\n    default:\n      return state;\n  }\n};\n","export const ADD_TRANSACTION = 'ADD_TRANSACTION';\nexport const DELETE_TRANSACTION = 'DELETE_TRANSACTION';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const PARSE_FILE = 'PARSE_FILE';\nexport const CLEAR_CURRENT = 'CLEAR CURRENT';\nexport const UPDATE_TRANSACTION = 'UPDATE_TRANSACTION';\nexport const FILTER_TRANSACTIONS = 'FILTER_TRANSACTIONS';\nexport const CLEAR_FILTER = 'CLEAR_FILTER';\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n","import React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport TransactionContext from './transactionContext';\nimport transactionReducer from './transactionReducer';\n\nimport {\n  ADD_TRANSACTION,\n  DELETE_TRANSACTION,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_TRANSACTION\n} from '../types';\n\nconst TransactionState = props => {\n  const initialState = {\n    transactions: [],\n    sorted: {},\n    current: null\n  };\n\n  const [state, dispatch] = useReducer(transactionReducer, initialState);\n\n  // Add Transaction\n  const addTransaction = transaction => {\n    transaction.id = uuid.v4();\n    dispatch({ type: ADD_TRANSACTION, payload: transaction });\n  };\n\n  // Delete Transaction\n\n  // Set Current Transaction\n\n  // Clear Current Transaction\n\n  // Update Transaction\n\n  // Sort Transactions\n\n  return (\n    <TransactionContext.Provider\n      value={{\n        transactions: state.transactions,\n        sorted: state.sorted,\n        current: state.current,\n        addTransaction\n      }}\n    >\n      {props.children}\n    </TransactionContext.Provider>\n  );\n};\n\nexport default TransactionState;\n","import React, { Fragment } from 'react';\nimport TransactionForm from './components/transaction/TransactionForm';\nimport TransactionTable from './components/transaction/TransactionTable';\n\nimport TransactionState from './context/transaction/TransactionState';\n// import './App.css';\n\nconst App = () => {\n  return (\n    <TransactionState>\n      <Fragment>\n        <h1 className='center-align'>Crypto Capital Gains Calculator</h1>\n        <div className='container'>\n          <p className='flow-text center'>\n            This app was built mainly to get practice designing and building\n            React apps. I am not an accountant and make no guarantees that the\n            calculations performed within this app are accurate. I encourage you\n            to seek the help of an accountant or tax expert with any questions\n            regarding tax obligations for crypto transactions.\n          </p>\n        </div>\n        <div className='divider'></div>\n        <TransactionForm />\n        <TransactionTable />\n      </Fragment>\n    </TransactionState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}